/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.jet.bio.data.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class BioBox extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -1197055233351628786L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"BioBox\",\"namespace\":\"com.jet.bio.data.avro\",\"fields\":[{\"name\":\"id\",\"type\":[\"string\",\"null\"]},{\"name\":\"boxCode\",\"type\":[\"string\",\"null\"]},{\"name\":\"boxType\",\"type\":[\"string\",\"null\"]},{\"name\":\"projectId\",\"type\":[\"string\",\"null\"]},{\"name\":\"fridgeId\",\"type\":[\"string\",\"null\"]},{\"name\":\"boxState\",\"type\":[\"string\",\"null\"]},{\"name\":\"remark\",\"type\":[\"string\",\"null\"]},{\"name\":\"isCheckin\",\"type\":[\"string\",\"null\"]},{\"name\":\"checkinlistId\",\"type\":[\"string\",\"null\"]},{\"name\":\"lccCode\",\"type\":[\"string\",\"null\"]},{\"name\":\"createDate\",\"type\":[\"string\",\"null\"]},{\"name\":\"createBy\",\"type\":[\"string\",\"null\"]},{\"name\":\"version\",\"type\":[\"string\",\"null\"]},{\"name\":\"clientId\",\"type\":[\"string\",\"null\"]},{\"name\":\"updateFlag\",\"type\":[\"string\",\"null\"]},{\"name\":\"hr3UpdateDate\",\"type\":[\"string\",\"null\"]},{\"name\":\"transDate\",\"type\":[\"string\",\"null\"]},{\"name\":\"mapp\",\"type\":[\"string\",\"null\"]},{\"name\":\"transDateFromMapp\",\"type\":[\"string\",\"null\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<BioBox> ENCODER =
      new BinaryMessageEncoder<BioBox>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<BioBox> DECODER =
      new BinaryMessageDecoder<BioBox>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<BioBox> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<BioBox> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<BioBox>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this BioBox to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a BioBox from a ByteBuffer. */
  public static BioBox fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence id;
  @Deprecated public java.lang.CharSequence boxCode;
  @Deprecated public java.lang.CharSequence boxType;
  @Deprecated public java.lang.CharSequence projectId;
  @Deprecated public java.lang.CharSequence fridgeId;
  @Deprecated public java.lang.CharSequence boxState;
  @Deprecated public java.lang.CharSequence remark;
  @Deprecated public java.lang.CharSequence isCheckin;
  @Deprecated public java.lang.CharSequence checkinlistId;
  @Deprecated public java.lang.CharSequence lccCode;
  @Deprecated public java.lang.CharSequence createDate;
  @Deprecated public java.lang.CharSequence createBy;
  @Deprecated public java.lang.CharSequence version;
  @Deprecated public java.lang.CharSequence clientId;
  @Deprecated public java.lang.CharSequence updateFlag;
  @Deprecated public java.lang.CharSequence hr3UpdateDate;
  @Deprecated public java.lang.CharSequence transDate;
  @Deprecated public java.lang.CharSequence mapp;
  @Deprecated public java.lang.CharSequence transDateFromMapp;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public BioBox() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param boxCode The new value for boxCode
   * @param boxType The new value for boxType
   * @param projectId The new value for projectId
   * @param fridgeId The new value for fridgeId
   * @param boxState The new value for boxState
   * @param remark The new value for remark
   * @param isCheckin The new value for isCheckin
   * @param checkinlistId The new value for checkinlistId
   * @param lccCode The new value for lccCode
   * @param createDate The new value for createDate
   * @param createBy The new value for createBy
   * @param version The new value for version
   * @param clientId The new value for clientId
   * @param updateFlag The new value for updateFlag
   * @param hr3UpdateDate The new value for hr3UpdateDate
   * @param transDate The new value for transDate
   * @param mapp The new value for mapp
   * @param transDateFromMapp The new value for transDateFromMapp
   */
  public BioBox(java.lang.CharSequence id, java.lang.CharSequence boxCode, java.lang.CharSequence boxType, java.lang.CharSequence projectId, java.lang.CharSequence fridgeId, java.lang.CharSequence boxState, java.lang.CharSequence remark, java.lang.CharSequence isCheckin, java.lang.CharSequence checkinlistId, java.lang.CharSequence lccCode, java.lang.CharSequence createDate, java.lang.CharSequence createBy, java.lang.CharSequence version, java.lang.CharSequence clientId, java.lang.CharSequence updateFlag, java.lang.CharSequence hr3UpdateDate, java.lang.CharSequence transDate, java.lang.CharSequence mapp, java.lang.CharSequence transDateFromMapp) {
    this.id = id;
    this.boxCode = boxCode;
    this.boxType = boxType;
    this.projectId = projectId;
    this.fridgeId = fridgeId;
    this.boxState = boxState;
    this.remark = remark;
    this.isCheckin = isCheckin;
    this.checkinlistId = checkinlistId;
    this.lccCode = lccCode;
    this.createDate = createDate;
    this.createBy = createBy;
    this.version = version;
    this.clientId = clientId;
    this.updateFlag = updateFlag;
    this.hr3UpdateDate = hr3UpdateDate;
    this.transDate = transDate;
    this.mapp = mapp;
    this.transDateFromMapp = transDateFromMapp;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return boxCode;
    case 2: return boxType;
    case 3: return projectId;
    case 4: return fridgeId;
    case 5: return boxState;
    case 6: return remark;
    case 7: return isCheckin;
    case 8: return checkinlistId;
    case 9: return lccCode;
    case 10: return createDate;
    case 11: return createBy;
    case 12: return version;
    case 13: return clientId;
    case 14: return updateFlag;
    case 15: return hr3UpdateDate;
    case 16: return transDate;
    case 17: return mapp;
    case 18: return transDateFromMapp;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.CharSequence)value$; break;
    case 1: boxCode = (java.lang.CharSequence)value$; break;
    case 2: boxType = (java.lang.CharSequence)value$; break;
    case 3: projectId = (java.lang.CharSequence)value$; break;
    case 4: fridgeId = (java.lang.CharSequence)value$; break;
    case 5: boxState = (java.lang.CharSequence)value$; break;
    case 6: remark = (java.lang.CharSequence)value$; break;
    case 7: isCheckin = (java.lang.CharSequence)value$; break;
    case 8: checkinlistId = (java.lang.CharSequence)value$; break;
    case 9: lccCode = (java.lang.CharSequence)value$; break;
    case 10: createDate = (java.lang.CharSequence)value$; break;
    case 11: createBy = (java.lang.CharSequence)value$; break;
    case 12: version = (java.lang.CharSequence)value$; break;
    case 13: clientId = (java.lang.CharSequence)value$; break;
    case 14: updateFlag = (java.lang.CharSequence)value$; break;
    case 15: hr3UpdateDate = (java.lang.CharSequence)value$; break;
    case 16: transDate = (java.lang.CharSequence)value$; break;
    case 17: mapp = (java.lang.CharSequence)value$; break;
    case 18: transDateFromMapp = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'boxCode' field.
   * @return The value of the 'boxCode' field.
   */
  public java.lang.CharSequence getBoxCode() {
    return boxCode;
  }

  /**
   * Sets the value of the 'boxCode' field.
   * @param value the value to set.
   */
  public void setBoxCode(java.lang.CharSequence value) {
    this.boxCode = value;
  }

  /**
   * Gets the value of the 'boxType' field.
   * @return The value of the 'boxType' field.
   */
  public java.lang.CharSequence getBoxType() {
    return boxType;
  }

  /**
   * Sets the value of the 'boxType' field.
   * @param value the value to set.
   */
  public void setBoxType(java.lang.CharSequence value) {
    this.boxType = value;
  }

  /**
   * Gets the value of the 'projectId' field.
   * @return The value of the 'projectId' field.
   */
  public java.lang.CharSequence getProjectId() {
    return projectId;
  }

  /**
   * Sets the value of the 'projectId' field.
   * @param value the value to set.
   */
  public void setProjectId(java.lang.CharSequence value) {
    this.projectId = value;
  }

  /**
   * Gets the value of the 'fridgeId' field.
   * @return The value of the 'fridgeId' field.
   */
  public java.lang.CharSequence getFridgeId() {
    return fridgeId;
  }

  /**
   * Sets the value of the 'fridgeId' field.
   * @param value the value to set.
   */
  public void setFridgeId(java.lang.CharSequence value) {
    this.fridgeId = value;
  }

  /**
   * Gets the value of the 'boxState' field.
   * @return The value of the 'boxState' field.
   */
  public java.lang.CharSequence getBoxState() {
    return boxState;
  }

  /**
   * Sets the value of the 'boxState' field.
   * @param value the value to set.
   */
  public void setBoxState(java.lang.CharSequence value) {
    this.boxState = value;
  }

  /**
   * Gets the value of the 'remark' field.
   * @return The value of the 'remark' field.
   */
  public java.lang.CharSequence getRemark() {
    return remark;
  }

  /**
   * Sets the value of the 'remark' field.
   * @param value the value to set.
   */
  public void setRemark(java.lang.CharSequence value) {
    this.remark = value;
  }

  /**
   * Gets the value of the 'isCheckin' field.
   * @return The value of the 'isCheckin' field.
   */
  public java.lang.CharSequence getIsCheckin() {
    return isCheckin;
  }

  /**
   * Sets the value of the 'isCheckin' field.
   * @param value the value to set.
   */
  public void setIsCheckin(java.lang.CharSequence value) {
    this.isCheckin = value;
  }

  /**
   * Gets the value of the 'checkinlistId' field.
   * @return The value of the 'checkinlistId' field.
   */
  public java.lang.CharSequence getCheckinlistId() {
    return checkinlistId;
  }

  /**
   * Sets the value of the 'checkinlistId' field.
   * @param value the value to set.
   */
  public void setCheckinlistId(java.lang.CharSequence value) {
    this.checkinlistId = value;
  }

  /**
   * Gets the value of the 'lccCode' field.
   * @return The value of the 'lccCode' field.
   */
  public java.lang.CharSequence getLccCode() {
    return lccCode;
  }

  /**
   * Sets the value of the 'lccCode' field.
   * @param value the value to set.
   */
  public void setLccCode(java.lang.CharSequence value) {
    this.lccCode = value;
  }

  /**
   * Gets the value of the 'createDate' field.
   * @return The value of the 'createDate' field.
   */
  public java.lang.CharSequence getCreateDate() {
    return createDate;
  }

  /**
   * Sets the value of the 'createDate' field.
   * @param value the value to set.
   */
  public void setCreateDate(java.lang.CharSequence value) {
    this.createDate = value;
  }

  /**
   * Gets the value of the 'createBy' field.
   * @return The value of the 'createBy' field.
   */
  public java.lang.CharSequence getCreateBy() {
    return createBy;
  }

  /**
   * Sets the value of the 'createBy' field.
   * @param value the value to set.
   */
  public void setCreateBy(java.lang.CharSequence value) {
    this.createBy = value;
  }

  /**
   * Gets the value of the 'version' field.
   * @return The value of the 'version' field.
   */
  public java.lang.CharSequence getVersion() {
    return version;
  }

  /**
   * Sets the value of the 'version' field.
   * @param value the value to set.
   */
  public void setVersion(java.lang.CharSequence value) {
    this.version = value;
  }

  /**
   * Gets the value of the 'clientId' field.
   * @return The value of the 'clientId' field.
   */
  public java.lang.CharSequence getClientId() {
    return clientId;
  }

  /**
   * Sets the value of the 'clientId' field.
   * @param value the value to set.
   */
  public void setClientId(java.lang.CharSequence value) {
    this.clientId = value;
  }

  /**
   * Gets the value of the 'updateFlag' field.
   * @return The value of the 'updateFlag' field.
   */
  public java.lang.CharSequence getUpdateFlag() {
    return updateFlag;
  }

  /**
   * Sets the value of the 'updateFlag' field.
   * @param value the value to set.
   */
  public void setUpdateFlag(java.lang.CharSequence value) {
    this.updateFlag = value;
  }

  /**
   * Gets the value of the 'hr3UpdateDate' field.
   * @return The value of the 'hr3UpdateDate' field.
   */
  public java.lang.CharSequence getHr3UpdateDate() {
    return hr3UpdateDate;
  }

  /**
   * Sets the value of the 'hr3UpdateDate' field.
   * @param value the value to set.
   */
  public void setHr3UpdateDate(java.lang.CharSequence value) {
    this.hr3UpdateDate = value;
  }

  /**
   * Gets the value of the 'transDate' field.
   * @return The value of the 'transDate' field.
   */
  public java.lang.CharSequence getTransDate() {
    return transDate;
  }

  /**
   * Sets the value of the 'transDate' field.
   * @param value the value to set.
   */
  public void setTransDate(java.lang.CharSequence value) {
    this.transDate = value;
  }

  /**
   * Gets the value of the 'mapp' field.
   * @return The value of the 'mapp' field.
   */
  public java.lang.CharSequence getMapp() {
    return mapp;
  }

  /**
   * Sets the value of the 'mapp' field.
   * @param value the value to set.
   */
  public void setMapp(java.lang.CharSequence value) {
    this.mapp = value;
  }

  /**
   * Gets the value of the 'transDateFromMapp' field.
   * @return The value of the 'transDateFromMapp' field.
   */
  public java.lang.CharSequence getTransDateFromMapp() {
    return transDateFromMapp;
  }

  /**
   * Sets the value of the 'transDateFromMapp' field.
   * @param value the value to set.
   */
  public void setTransDateFromMapp(java.lang.CharSequence value) {
    this.transDateFromMapp = value;
  }

  /**
   * Creates a new BioBox RecordBuilder.
   * @return A new BioBox RecordBuilder
   */
  public static com.jet.bio.data.avro.BioBox.Builder newBuilder() {
    return new com.jet.bio.data.avro.BioBox.Builder();
  }

  /**
   * Creates a new BioBox RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new BioBox RecordBuilder
   */
  public static com.jet.bio.data.avro.BioBox.Builder newBuilder(com.jet.bio.data.avro.BioBox.Builder other) {
    return new com.jet.bio.data.avro.BioBox.Builder(other);
  }

  /**
   * Creates a new BioBox RecordBuilder by copying an existing BioBox instance.
   * @param other The existing instance to copy.
   * @return A new BioBox RecordBuilder
   */
  public static com.jet.bio.data.avro.BioBox.Builder newBuilder(com.jet.bio.data.avro.BioBox other) {
    return new com.jet.bio.data.avro.BioBox.Builder(other);
  }

  /**
   * RecordBuilder for BioBox instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<BioBox>
    implements org.apache.avro.data.RecordBuilder<BioBox> {

    private java.lang.CharSequence id;
    private java.lang.CharSequence boxCode;
    private java.lang.CharSequence boxType;
    private java.lang.CharSequence projectId;
    private java.lang.CharSequence fridgeId;
    private java.lang.CharSequence boxState;
    private java.lang.CharSequence remark;
    private java.lang.CharSequence isCheckin;
    private java.lang.CharSequence checkinlistId;
    private java.lang.CharSequence lccCode;
    private java.lang.CharSequence createDate;
    private java.lang.CharSequence createBy;
    private java.lang.CharSequence version;
    private java.lang.CharSequence clientId;
    private java.lang.CharSequence updateFlag;
    private java.lang.CharSequence hr3UpdateDate;
    private java.lang.CharSequence transDate;
    private java.lang.CharSequence mapp;
    private java.lang.CharSequence transDateFromMapp;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.jet.bio.data.avro.BioBox.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.boxCode)) {
        this.boxCode = data().deepCopy(fields()[1].schema(), other.boxCode);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.boxType)) {
        this.boxType = data().deepCopy(fields()[2].schema(), other.boxType);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.projectId)) {
        this.projectId = data().deepCopy(fields()[3].schema(), other.projectId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.fridgeId)) {
        this.fridgeId = data().deepCopy(fields()[4].schema(), other.fridgeId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.boxState)) {
        this.boxState = data().deepCopy(fields()[5].schema(), other.boxState);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.remark)) {
        this.remark = data().deepCopy(fields()[6].schema(), other.remark);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.isCheckin)) {
        this.isCheckin = data().deepCopy(fields()[7].schema(), other.isCheckin);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.checkinlistId)) {
        this.checkinlistId = data().deepCopy(fields()[8].schema(), other.checkinlistId);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.lccCode)) {
        this.lccCode = data().deepCopy(fields()[9].schema(), other.lccCode);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.createDate)) {
        this.createDate = data().deepCopy(fields()[10].schema(), other.createDate);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.createBy)) {
        this.createBy = data().deepCopy(fields()[11].schema(), other.createBy);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.version)) {
        this.version = data().deepCopy(fields()[12].schema(), other.version);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.clientId)) {
        this.clientId = data().deepCopy(fields()[13].schema(), other.clientId);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.updateFlag)) {
        this.updateFlag = data().deepCopy(fields()[14].schema(), other.updateFlag);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.hr3UpdateDate)) {
        this.hr3UpdateDate = data().deepCopy(fields()[15].schema(), other.hr3UpdateDate);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.transDate)) {
        this.transDate = data().deepCopy(fields()[16].schema(), other.transDate);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.mapp)) {
        this.mapp = data().deepCopy(fields()[17].schema(), other.mapp);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.transDateFromMapp)) {
        this.transDateFromMapp = data().deepCopy(fields()[18].schema(), other.transDateFromMapp);
        fieldSetFlags()[18] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing BioBox instance
     * @param other The existing instance to copy.
     */
    private Builder(com.jet.bio.data.avro.BioBox other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.boxCode)) {
        this.boxCode = data().deepCopy(fields()[1].schema(), other.boxCode);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.boxType)) {
        this.boxType = data().deepCopy(fields()[2].schema(), other.boxType);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.projectId)) {
        this.projectId = data().deepCopy(fields()[3].schema(), other.projectId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.fridgeId)) {
        this.fridgeId = data().deepCopy(fields()[4].schema(), other.fridgeId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.boxState)) {
        this.boxState = data().deepCopy(fields()[5].schema(), other.boxState);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.remark)) {
        this.remark = data().deepCopy(fields()[6].schema(), other.remark);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.isCheckin)) {
        this.isCheckin = data().deepCopy(fields()[7].schema(), other.isCheckin);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.checkinlistId)) {
        this.checkinlistId = data().deepCopy(fields()[8].schema(), other.checkinlistId);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.lccCode)) {
        this.lccCode = data().deepCopy(fields()[9].schema(), other.lccCode);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.createDate)) {
        this.createDate = data().deepCopy(fields()[10].schema(), other.createDate);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.createBy)) {
        this.createBy = data().deepCopy(fields()[11].schema(), other.createBy);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.version)) {
        this.version = data().deepCopy(fields()[12].schema(), other.version);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.clientId)) {
        this.clientId = data().deepCopy(fields()[13].schema(), other.clientId);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.updateFlag)) {
        this.updateFlag = data().deepCopy(fields()[14].schema(), other.updateFlag);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.hr3UpdateDate)) {
        this.hr3UpdateDate = data().deepCopy(fields()[15].schema(), other.hr3UpdateDate);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.transDate)) {
        this.transDate = data().deepCopy(fields()[16].schema(), other.transDate);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.mapp)) {
        this.mapp = data().deepCopy(fields()[17].schema(), other.mapp);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.transDateFromMapp)) {
        this.transDateFromMapp = data().deepCopy(fields()[18].schema(), other.transDateFromMapp);
        fieldSetFlags()[18] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.CharSequence getId() {
      return id;
    }

    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.jet.bio.data.avro.BioBox.Builder setId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public com.jet.bio.data.avro.BioBox.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'boxCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getBoxCode() {
      return boxCode;
    }

    /**
      * Sets the value of the 'boxCode' field.
      * @param value The value of 'boxCode'.
      * @return This builder.
      */
    public com.jet.bio.data.avro.BioBox.Builder setBoxCode(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.boxCode = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'boxCode' field has been set.
      * @return True if the 'boxCode' field has been set, false otherwise.
      */
    public boolean hasBoxCode() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'boxCode' field.
      * @return This builder.
      */
    public com.jet.bio.data.avro.BioBox.Builder clearBoxCode() {
      boxCode = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'boxType' field.
      * @return The value.
      */
    public java.lang.CharSequence getBoxType() {
      return boxType;
    }

    /**
      * Sets the value of the 'boxType' field.
      * @param value The value of 'boxType'.
      * @return This builder.
      */
    public com.jet.bio.data.avro.BioBox.Builder setBoxType(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.boxType = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'boxType' field has been set.
      * @return True if the 'boxType' field has been set, false otherwise.
      */
    public boolean hasBoxType() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'boxType' field.
      * @return This builder.
      */
    public com.jet.bio.data.avro.BioBox.Builder clearBoxType() {
      boxType = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'projectId' field.
      * @return The value.
      */
    public java.lang.CharSequence getProjectId() {
      return projectId;
    }

    /**
      * Sets the value of the 'projectId' field.
      * @param value The value of 'projectId'.
      * @return This builder.
      */
    public com.jet.bio.data.avro.BioBox.Builder setProjectId(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.projectId = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'projectId' field has been set.
      * @return True if the 'projectId' field has been set, false otherwise.
      */
    public boolean hasProjectId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'projectId' field.
      * @return This builder.
      */
    public com.jet.bio.data.avro.BioBox.Builder clearProjectId() {
      projectId = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'fridgeId' field.
      * @return The value.
      */
    public java.lang.CharSequence getFridgeId() {
      return fridgeId;
    }

    /**
      * Sets the value of the 'fridgeId' field.
      * @param value The value of 'fridgeId'.
      * @return This builder.
      */
    public com.jet.bio.data.avro.BioBox.Builder setFridgeId(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.fridgeId = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'fridgeId' field has been set.
      * @return True if the 'fridgeId' field has been set, false otherwise.
      */
    public boolean hasFridgeId() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'fridgeId' field.
      * @return This builder.
      */
    public com.jet.bio.data.avro.BioBox.Builder clearFridgeId() {
      fridgeId = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'boxState' field.
      * @return The value.
      */
    public java.lang.CharSequence getBoxState() {
      return boxState;
    }

    /**
      * Sets the value of the 'boxState' field.
      * @param value The value of 'boxState'.
      * @return This builder.
      */
    public com.jet.bio.data.avro.BioBox.Builder setBoxState(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.boxState = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'boxState' field has been set.
      * @return True if the 'boxState' field has been set, false otherwise.
      */
    public boolean hasBoxState() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'boxState' field.
      * @return This builder.
      */
    public com.jet.bio.data.avro.BioBox.Builder clearBoxState() {
      boxState = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'remark' field.
      * @return The value.
      */
    public java.lang.CharSequence getRemark() {
      return remark;
    }

    /**
      * Sets the value of the 'remark' field.
      * @param value The value of 'remark'.
      * @return This builder.
      */
    public com.jet.bio.data.avro.BioBox.Builder setRemark(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.remark = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'remark' field has been set.
      * @return True if the 'remark' field has been set, false otherwise.
      */
    public boolean hasRemark() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'remark' field.
      * @return This builder.
      */
    public com.jet.bio.data.avro.BioBox.Builder clearRemark() {
      remark = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'isCheckin' field.
      * @return The value.
      */
    public java.lang.CharSequence getIsCheckin() {
      return isCheckin;
    }

    /**
      * Sets the value of the 'isCheckin' field.
      * @param value The value of 'isCheckin'.
      * @return This builder.
      */
    public com.jet.bio.data.avro.BioBox.Builder setIsCheckin(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.isCheckin = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'isCheckin' field has been set.
      * @return True if the 'isCheckin' field has been set, false otherwise.
      */
    public boolean hasIsCheckin() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'isCheckin' field.
      * @return This builder.
      */
    public com.jet.bio.data.avro.BioBox.Builder clearIsCheckin() {
      isCheckin = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'checkinlistId' field.
      * @return The value.
      */
    public java.lang.CharSequence getCheckinlistId() {
      return checkinlistId;
    }

    /**
      * Sets the value of the 'checkinlistId' field.
      * @param value The value of 'checkinlistId'.
      * @return This builder.
      */
    public com.jet.bio.data.avro.BioBox.Builder setCheckinlistId(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.checkinlistId = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'checkinlistId' field has been set.
      * @return True if the 'checkinlistId' field has been set, false otherwise.
      */
    public boolean hasCheckinlistId() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'checkinlistId' field.
      * @return This builder.
      */
    public com.jet.bio.data.avro.BioBox.Builder clearCheckinlistId() {
      checkinlistId = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'lccCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getLccCode() {
      return lccCode;
    }

    /**
      * Sets the value of the 'lccCode' field.
      * @param value The value of 'lccCode'.
      * @return This builder.
      */
    public com.jet.bio.data.avro.BioBox.Builder setLccCode(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.lccCode = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'lccCode' field has been set.
      * @return True if the 'lccCode' field has been set, false otherwise.
      */
    public boolean hasLccCode() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'lccCode' field.
      * @return This builder.
      */
    public com.jet.bio.data.avro.BioBox.Builder clearLccCode() {
      lccCode = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'createDate' field.
      * @return The value.
      */
    public java.lang.CharSequence getCreateDate() {
      return createDate;
    }

    /**
      * Sets the value of the 'createDate' field.
      * @param value The value of 'createDate'.
      * @return This builder.
      */
    public com.jet.bio.data.avro.BioBox.Builder setCreateDate(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.createDate = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'createDate' field has been set.
      * @return True if the 'createDate' field has been set, false otherwise.
      */
    public boolean hasCreateDate() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'createDate' field.
      * @return This builder.
      */
    public com.jet.bio.data.avro.BioBox.Builder clearCreateDate() {
      createDate = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'createBy' field.
      * @return The value.
      */
    public java.lang.CharSequence getCreateBy() {
      return createBy;
    }

    /**
      * Sets the value of the 'createBy' field.
      * @param value The value of 'createBy'.
      * @return This builder.
      */
    public com.jet.bio.data.avro.BioBox.Builder setCreateBy(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.createBy = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'createBy' field has been set.
      * @return True if the 'createBy' field has been set, false otherwise.
      */
    public boolean hasCreateBy() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'createBy' field.
      * @return This builder.
      */
    public com.jet.bio.data.avro.BioBox.Builder clearCreateBy() {
      createBy = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'version' field.
      * @return The value.
      */
    public java.lang.CharSequence getVersion() {
      return version;
    }

    /**
      * Sets the value of the 'version' field.
      * @param value The value of 'version'.
      * @return This builder.
      */
    public com.jet.bio.data.avro.BioBox.Builder setVersion(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.version = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'version' field has been set.
      * @return True if the 'version' field has been set, false otherwise.
      */
    public boolean hasVersion() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'version' field.
      * @return This builder.
      */
    public com.jet.bio.data.avro.BioBox.Builder clearVersion() {
      version = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'clientId' field.
      * @return The value.
      */
    public java.lang.CharSequence getClientId() {
      return clientId;
    }

    /**
      * Sets the value of the 'clientId' field.
      * @param value The value of 'clientId'.
      * @return This builder.
      */
    public com.jet.bio.data.avro.BioBox.Builder setClientId(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.clientId = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'clientId' field has been set.
      * @return True if the 'clientId' field has been set, false otherwise.
      */
    public boolean hasClientId() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'clientId' field.
      * @return This builder.
      */
    public com.jet.bio.data.avro.BioBox.Builder clearClientId() {
      clientId = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'updateFlag' field.
      * @return The value.
      */
    public java.lang.CharSequence getUpdateFlag() {
      return updateFlag;
    }

    /**
      * Sets the value of the 'updateFlag' field.
      * @param value The value of 'updateFlag'.
      * @return This builder.
      */
    public com.jet.bio.data.avro.BioBox.Builder setUpdateFlag(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.updateFlag = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'updateFlag' field has been set.
      * @return True if the 'updateFlag' field has been set, false otherwise.
      */
    public boolean hasUpdateFlag() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'updateFlag' field.
      * @return This builder.
      */
    public com.jet.bio.data.avro.BioBox.Builder clearUpdateFlag() {
      updateFlag = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'hr3UpdateDate' field.
      * @return The value.
      */
    public java.lang.CharSequence getHr3UpdateDate() {
      return hr3UpdateDate;
    }

    /**
      * Sets the value of the 'hr3UpdateDate' field.
      * @param value The value of 'hr3UpdateDate'.
      * @return This builder.
      */
    public com.jet.bio.data.avro.BioBox.Builder setHr3UpdateDate(java.lang.CharSequence value) {
      validate(fields()[15], value);
      this.hr3UpdateDate = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'hr3UpdateDate' field has been set.
      * @return True if the 'hr3UpdateDate' field has been set, false otherwise.
      */
    public boolean hasHr3UpdateDate() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'hr3UpdateDate' field.
      * @return This builder.
      */
    public com.jet.bio.data.avro.BioBox.Builder clearHr3UpdateDate() {
      hr3UpdateDate = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'transDate' field.
      * @return The value.
      */
    public java.lang.CharSequence getTransDate() {
      return transDate;
    }

    /**
      * Sets the value of the 'transDate' field.
      * @param value The value of 'transDate'.
      * @return This builder.
      */
    public com.jet.bio.data.avro.BioBox.Builder setTransDate(java.lang.CharSequence value) {
      validate(fields()[16], value);
      this.transDate = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'transDate' field has been set.
      * @return True if the 'transDate' field has been set, false otherwise.
      */
    public boolean hasTransDate() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'transDate' field.
      * @return This builder.
      */
    public com.jet.bio.data.avro.BioBox.Builder clearTransDate() {
      transDate = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'mapp' field.
      * @return The value.
      */
    public java.lang.CharSequence getMapp() {
      return mapp;
    }

    /**
      * Sets the value of the 'mapp' field.
      * @param value The value of 'mapp'.
      * @return This builder.
      */
    public com.jet.bio.data.avro.BioBox.Builder setMapp(java.lang.CharSequence value) {
      validate(fields()[17], value);
      this.mapp = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'mapp' field has been set.
      * @return True if the 'mapp' field has been set, false otherwise.
      */
    public boolean hasMapp() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'mapp' field.
      * @return This builder.
      */
    public com.jet.bio.data.avro.BioBox.Builder clearMapp() {
      mapp = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'transDateFromMapp' field.
      * @return The value.
      */
    public java.lang.CharSequence getTransDateFromMapp() {
      return transDateFromMapp;
    }

    /**
      * Sets the value of the 'transDateFromMapp' field.
      * @param value The value of 'transDateFromMapp'.
      * @return This builder.
      */
    public com.jet.bio.data.avro.BioBox.Builder setTransDateFromMapp(java.lang.CharSequence value) {
      validate(fields()[18], value);
      this.transDateFromMapp = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'transDateFromMapp' field has been set.
      * @return True if the 'transDateFromMapp' field has been set, false otherwise.
      */
    public boolean hasTransDateFromMapp() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'transDateFromMapp' field.
      * @return This builder.
      */
    public com.jet.bio.data.avro.BioBox.Builder clearTransDateFromMapp() {
      transDateFromMapp = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public BioBox build() {
      try {
        BioBox record = new BioBox();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.boxCode = fieldSetFlags()[1] ? this.boxCode : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.boxType = fieldSetFlags()[2] ? this.boxType : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.projectId = fieldSetFlags()[3] ? this.projectId : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.fridgeId = fieldSetFlags()[4] ? this.fridgeId : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.boxState = fieldSetFlags()[5] ? this.boxState : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.remark = fieldSetFlags()[6] ? this.remark : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.isCheckin = fieldSetFlags()[7] ? this.isCheckin : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.checkinlistId = fieldSetFlags()[8] ? this.checkinlistId : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.lccCode = fieldSetFlags()[9] ? this.lccCode : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.createDate = fieldSetFlags()[10] ? this.createDate : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.createBy = fieldSetFlags()[11] ? this.createBy : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.version = fieldSetFlags()[12] ? this.version : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.clientId = fieldSetFlags()[13] ? this.clientId : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.updateFlag = fieldSetFlags()[14] ? this.updateFlag : (java.lang.CharSequence) defaultValue(fields()[14]);
        record.hr3UpdateDate = fieldSetFlags()[15] ? this.hr3UpdateDate : (java.lang.CharSequence) defaultValue(fields()[15]);
        record.transDate = fieldSetFlags()[16] ? this.transDate : (java.lang.CharSequence) defaultValue(fields()[16]);
        record.mapp = fieldSetFlags()[17] ? this.mapp : (java.lang.CharSequence) defaultValue(fields()[17]);
        record.transDateFromMapp = fieldSetFlags()[18] ? this.transDateFromMapp : (java.lang.CharSequence) defaultValue(fields()[18]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<BioBox>
    WRITER$ = (org.apache.avro.io.DatumWriter<BioBox>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<BioBox>
    READER$ = (org.apache.avro.io.DatumReader<BioBox>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
